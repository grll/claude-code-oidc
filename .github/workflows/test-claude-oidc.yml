name: Test Claude OIDC

on:
  workflow_dispatch:

jobs:
  test-claude:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Claude Code with stored credentials
        run: |
          mkdir -p ~/.claude
          echo '{
            "claudeAiOauth":{
              "accessToken": "${{ secrets.CLAUDE_ACCESS_TOKEN }}",
              "refreshToken": "${{ secrets.CLAUDE_REFRESH_TOKEN }}",
              "expiresAt": ${{ secrets.CLAUDE_EXPIRES_AT }},
              "scopes": [
                "user:inference",
                "user:profile"
              ]
            }
          }' > ~/.claude/.credentials.json
      
      - name: Ensure Claude is onboarded for interactive mode
        run: |
          cat > ~/.claude.json << 'EOF'
          {
            "numStartups": 173,
            "autoUpdaterStatus": "migrated",
            "tipsHistory": {
              "new-user-warmup": 1,
              "terminal-setup": 80,
              "memory-command": 73,
              "theme-command": 135,
              "prompt-queue": 69,
              "todo-list": 140,
              "enter-to-steer-in-relatime": 154,
              "git-worktrees": 167,
              "claude-opus-welcome": 78,
              "shift-enter": 168,
              "ide-hotkey": 171
            },
            "memoryUsageCount": 6,
            "promptQueueUseCount": 15,
            "userID": "5d39a987b9ea56548f67f7b99ea032394b10ad05dd6380b86586c4f09415a39f",
            "hasCompletedOnboarding": true,
            "lastOnboardingVersion": "1.0.3",
            "projects": {
              "/home/runner/work/claude-code-oidc/claude-code-oidc": {
                "allowedTools": [],
                "history": [],
                "dontCrawlDirectory": false,
                "mcpContextUris": [],
                "mcpServers": {},
                "hasTrustDialogAccepted": true,
                "ignorePatterns": [],
                "projectOnboardingSeenCount": 2,
                "exampleFiles": [],
                "exampleFilesGeneratedAt": 1748698751487,
                "hasCompletedProjectOnboarding": true
              }  
            },
            "cachedChangelog": "# Changelog\n\n## 1.0.11\n\n- Claude Code can now also be used with a Claude Pro subscription\n- Added /upgrade for smoother switching to Claude Max plans\n- Improved UI for authentication from API keys and Bedrock/Vertex/external auth tokens\n- Improved shell configuration error handling\n- Improved todo list handling during compaction\n\n## 1.0.10\n\n- Added markdown table support\n- Improved streaming performance\n\n## 1.0.8\n\n- Fixed Vertex AI region fallback when using CLOUD_ML_REGION\n- Increased default otel interval from 1s -> 5s\n- Fixed edge cases where MCP_TIMEOUT and MCP_TOOL_TIMEOUT weren't being respected\n- Fixed a regression where search tools unnecessarily asked for permissions\n- Added support for triggering thinking non-English languages\n- Improved compacting UI\n\n## 1.0.7\n\n- Renamed /allowed-tools -> /permissions\n- Migrated allowedTools and ignorePatterns from .claude.json -> settings.json\n- Deprecated claude config commands in favor of editing settings.json\n- Fixed a bug where --dangerously-skip-permissions sometimes didn't work in --print mode\n- Improved error handling for /install-github-app\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.6\n\n- Improved edit reliability for tab-indented files\n- Respect CLAUDE_CONFIG_DIR everywhere\n- Reduced unnecessary tool permission prompts\n- Added support for symlinks in @file typeahead\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.4\n\n- Fixed a bug where MCP tool errors weren't being parsed correctly\n\n## 1.0.1\n\n- Added `DISABLE_INTERLEAVED_THINKING` to give users the option to opt out of interleaved thinking.\n- Improved model references to show provider-specific names (Sonnet 3.7 for Bedrock, Sonnet 4 for Console)\n- Updated documentation links and OAuth process descriptions\n\n## 1.0.0\n\n- Claude Code is now generally available\n- Introducing Sonnet 4 and Opus 4 models\n\n## 0.2.125\n\n- Breaking change: Bedrock ARN passed to `ANTHROPIC_MODEL` or `ANTHROPIC_SMALL_FAST_MODEL` should no longer contain an escaped slash (specify `/` instead of `%2F`)\n- Removed `DEBUG=true` in favor of `ANTHROPIC_LOG=debug`, to log all requests\n\n## 0.2.117\n\n- Breaking change: --print JSON output now returns nested message objects, for forwards-compatibility as we introduce new metadata fields\n- Introduced settings.cleanupPeriodDays\n- Introduced CLAUDE_CODE_API_KEY_HELPER_TTL_MS env var\n- Introduced --debug mode\n\n## 0.2.108\n\n- You can now send messages to Claude while it works to steer Claude in real-time\n- Introduced BASH_DEFAULT_TIMEOUT_MS and BASH_MAX_TIMEOUT_MS env vars\n- Fixed a bug where thinking was not working in -p mode\n- Fixed a regression in /cost reporting\n- Deprecated MCP wizard interface in favor of other MCP commands\n- Lots of other bugfixes and improvements\n\n## 0.2.107\n\n- CLAUDE.md files can now import other files. Add @path/to/file.md to ./CLAUDE.md to load additional files on launch\n\n## 0.2.106\n\n- MCP SSE server configs can now specify custom headers\n- Fixed a bug where MCP permission prompt didn't always show correctly\n\n## 0.2.105\n\n- Claude can now search the web\n- Moved system & account status to /status\n- Added word movement keybindings for Vim\n- Improved latency for startup, todo tool, and file edits\n\n## 0.2.102\n\n- Improved thinking triggering reliability\n- Improved @mention reliability for images and folders\n- You can now paste multiple large chunks into one prompt\n\n## 0.2.100\n\n- Fixed a crash caused by a stack overflow error\n- Made db storage optional; missing db support disables --continue and --resume\n\n## 0.2.98\n\n- Fixed an issue where auto-compact was running twice\n\n## 0.2.96\n\n- Claude Code can now also be used with a Claude Max subscription (https://claude.ai/upgrade)\n\n## 0.2.93\n\n- Resume conversations from where you left off from with \"claude --continue\" and \"claude --resume\"\n- Claude now has access to a Todo list that helps it stay on track and be more organized\n\n## 0.2.82\n\n- Added support for --disallowedTools\n- Renamed tools for consistency: LSTool -> LS, View -> Read, etc.\n\n## 0.2.75\n\n- Hit Enter to queue up additional messages while Claude is working\n- Drag in or copy/paste image files directly into the prompt\n- @-mention files to directly add them to context\n- Run one-off MCP servers with `claude --mcp-config <path-to-file>`\n- Improved performance for filename auto-complete\n\n## 0.2.74\n\n- Added support for refreshing dynamically generated API keys (via apiKeyHelper), with a 5 minute TTL\n- Task tool can now perform writes and run bash commands\n\n## 0.2.72\n\n- Updated spinner to indicate tokens loaded and tool usage\n\n## 0.2.70\n\n- Network commands like curl are now available for Claude to use\n- Claude can now run multiple web queries in parallel\n- Pressing ESC once immediately interrupts Claude in Auto-accept mode\n\n## 0.2.69\n\n- Fixed UI glitches with improved Select component behavior\n- Enhanced terminal output display with better text truncation logic\n\n## 0.2.67\n\n- Shared project permission rules can be saved in .claude/settings.json\n\n## 0.2.66\n\n- Print mode (-p) now supports streaming output via --output-format=stream-json\n- Fixed issue where pasting could trigger memory or bash mode unexpectedly\n\n## 0.2.63\n\n- Fixed an issue where MCP tools were loaded twice, which caused tool call errors\n\n## 0.2.61\n\n- Navigate menus with vim-style keys (j/k) or bash/emacs shortcuts (Ctrl+n/p) for faster interaction\n- Enhanced image detection for more reliable clipboard paste functionality\n- Fixed an issue where ESC key could crash the conversation history selector\n\n## 0.2.59\n\n- Copy+paste images directly into your prompt\n- Improved progress indicators for bash and fetch tools\n- Bugfixes for non-interactive mode (-p)\n\n## 0.2.54\n\n- Quickly add to Memory by starting your message with '#'\n- Press ctrl+r to see full output for long tool results\n- Added support for MCP SSE transport\n\n## 0.2.53\n\n- New web fetch tool lets Claude view URLs that you paste in\n- Fixed a bug with JPEG detection\n\n## 0.2.50\n\n- New MCP \"project\" scope now allows you to add MCP servers to .mcp.json files and commit them to your repository\n\n## 0.2.49\n\n- Previous MCP server scopes have been renamed: previous \"project\" scope is now \"local\" and \"global\" scope is now \"user\"\n\n## 0.2.47\n\n- Press Tab to auto-complete file and folder names\n- Press Shift + Tab to toggle auto-accept for file edits\n- Automatic conversation compaction for infinite conversation length (toggle with /config)\n\n## 0.2.44\n\n- Ask Claude to make a plan with thinking mode: just say 'think' or 'think harder' or even 'ultrathink'\n\n## 0.2.41\n\n- MCP server startup timeout can now be configured via MCP_TIMEOUT environment variable\n- MCP server startup no longer blocks the app from starting up\n\n## 0.2.37\n\n- New /release-notes command lets you view release notes at any time\n- `claude config add/remove` commands now accept multiple values separated by commas or spaces\n\n## 0.2.36\n\n- Import MCP servers from Claude Desktop with `claude mcp add-from-claude-desktop`\n- Add MCP servers as JSON strings with `claude mcp add-json <n> <json>`\n\n## 0.2.34\n\n- Vim bindings for text input - enable with /vim or /config\n\n## 0.2.32\n\n- Interactive MCP setup wizard: Run \"claude mcp add\" to add MCP servers with a step-by-step interface\n- Fix for some PersistentShell issues\n\n## 0.2.31\n\n- Custom slash commands: Markdown files in .claude/commands/ directories now appear as custom slash commands to insert prompts into your conversation\n- MCP debug mode: Run with --mcp-debug flag to get more information about MCP server errors\n\n## 0.2.30\n\n- Added ANSI color theme for better terminal compatibility\n- Fixed issue where slash command arguments weren't being sent properly\n- (Mac-only) API keys are now stored in macOS Keychain\n\n## 0.2.26\n\n- New /approved-tools command for managing tool permissions\n- Word-level diff display for improved code readability\n- Fuzzy matching for slash commands\n\n## 0.2.21\n\n- Fuzzy matching for /commands\n",
            "changelogLastFetched": 1749152864666,
            "maxSubscriptionNoticeCount": 0,
            "hasAvailableMaxSubscription": false,
            "lastReleaseNotesSeen": "1.0.11",
            "isQualifiedForDataSharing": false,
            "hasUsedBackslashReturn": true,
            "statsigModel": {
              "firstParty": "claude-sonnet-4-20250514",
              "bedrock": "us.anthropic.claude-sonnet-4-20250514-v1:0",
              "vertex": "claude-sonnet-4@20250514"
            },
            "firstStartTime": "2025-05-13T05:39:16.627Z",
            "bypassPermissionsModeAccepted": true,
            "claudeMaxTier": "not_max",
            "hasSeenGAAnnounce": true,
            "shiftEnterKeyBindingInstalled": true,
            "hasIdeOnboardingBeenShown": {
              "vscode": true,
              "cursor": true
            },
            "fallbackAvailableWarningThreshold": 0.2,
            "oauthAccount": {
              "accountUuid": "f4f9b9b0-ceb3-40bc-bead-3d1043ac7ff4",
              "emailAddress": "guillaume.raille@gmail.com",
              "organizationUuid": "5730a2b7-95e1-4116-9a48-3bf8bd024e7e",
              "organizationRole": "admin",
              "workspaceRole": null,
              "organizationName": "guillaume.raille@gmail.com's Organization"
            },
            "subscriptionNoticeCount": 0,
            "hasAvailableSubscription": false
          }
          EOF

      - name: Install Claude Code
        run: npm install -g @anthropic-ai/claude-code
        
      - name: Test authentication
        run: claude --version
        
      - name: Start Claude in interactive mode to refresh token
        run: |
          # Use script command to create a pseudo-TTY, send /status after 5 seconds, then timeout kills it
          (echo "1"; sleep 5; echo "/status") | timeout 10s script -q -c "claude" /dev/null || true
          
      - name: Test Claude with a prompt
        run: claude -p "Say Hello"